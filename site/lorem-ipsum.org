:PROPERTIES:
:AUTHOR: Ian S. Pringle
:CREATED: <2022-08-25 Thu>
:MODIFIED: <2022-09-26 Mon 16:44>
:TYPE: page
:END:
#+title: Lorem Ipsum
* Lorem Ipsum
This is my /Lorem Ipsum/ page. I use this as a visual testing bed to verify my
article styling is set correctly.

** Inline syntax
This is /italic/ and so is /this/ and /this/. You can also make an /entire phrase into
italics/. Really though, italics are best reserved for the /Titles of Books and
Other Things/. According to [[https://www.grammarly.com/blog/italics/][Grammarly]], italics can may be used for:
1. Long written works
2. Periodical names
3. Moves, plays, and television shows
4. Podcasts and radio shows
5. Music albums, operas, and long musical compositions
6. Apps and video games
7. Works of art
8. Legal cases
9. Names of large vehicles (ships, aircraft, spaceships, trains)
10. Foreign words
11. Scientific names
12. When discussing specific words or letters
13. Unspoken thoughts and internal monologues
14. Emphasis

Of course when using italics to mark a title it should be not be intermixed with
*bold* text or _underlined_ text. The 15th edition of the /Chicago Manual of Style/
says

#+begin_quote
All punctuation marks should appear in the same font – roman or italic – as the
main or surrounding text, except for punctuation that belongs to a title or an
exclamation in a different font. This departure from Chicago's former usage
serves both simplicity and logic.
#+end_quote

There is little on when to use *bold* text and the little there is suggests that
it's valid in creative writing but otherwise should be avoided. Another
suggestion was to use either italics or bold, but not both, and to make the
choice based upon the type-face you have selected. The logic [[https://techstacker.com/typography-italic-vs-bold/][here]] is that some
font-faces have a weak italic and so bold is a better substitute. Personally, I
use bold sparingly, so I am not concerned about using it over much.

My understanding of the _underline_ is that it's a relic from the past. Prior to
the computer, underlining words, phrases, titles, etc. was considered a valid
replacement for the use of italics. This is because prior to the computer papers
were written by hand or on a typewriter and neither of them had a good way of
producing italicized texted. A pen could be used to add an underline to a paper
once typed. Thus style guides would allow for this usage. However, with
computers it's trivial to add italic text and so the underline has lost much of
it's purpose in life.

There is the even less used +strike through+ and we need not much, or at all!

For expressing ~code~, terminal ~commands~, and other similar things we have the
~code~ directive. This sets the font to ~monospace~ and usually adds some additional
visual indicators. It does not add syntax highlighting the way it's cousin the
code block does, so this is best reserved for small snippets. I would not want
to describe more than a single line or so in this manner.

There is also the =verbatim= directive in org-mode, however this renders the same
way as the ~code~ directive in HTML so there is little need for both. You can of
course set the =verbatim= directive to use a different HTML element by altering
~org-html-markup-alist~. I might set verbatim up to use the ~<key>~ tag in the
future.

Orgmode has native support for^superscript and_subscript. If the text to be
raised or lowered exceeds a single word you can wrap it in braces^{Like in
this example}. I do not write much mathematical or scientific material
so subscript will likely be used little and superscript little more.

One use of the superscript that I suspect might get some use in the form of
footnotes.[fn:: emacs supports inline footnotes, which I prefer to use in my
writing.] unfortunately, getting your footnotes to appear to the side as in the
style of Edward Tufte is not easy. This means that a client-side version of the
side note will need to be implemented that uses JavaScript.[fn:js-sidenotes:I am
not oppossed to this idea, but it's not my favorite. I'd rather minimize my use
of client-side JS, only because it'll mess up first paint and add in some odd
and unsettling movements.]
