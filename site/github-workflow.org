:PROPERTIES:
:AUTHOR: Ian S. Pringle
:CREATED: <2022-08-25 Thu>
:MODIFIED: <2022-09-03 Sat 05:52>
:TYPE: literate
:ID:       b3a36c3c-1fa7-40b8-9933-6b7c5fca9b10
:END:
#+title: Github Workflow

This is my Github workflow. This file is a literate file that uses org-tangle to
"compile" the needed yaml for Github.

* Workflows
** Build with org-publish and deploy to Neocities
:PROPERTIES:
:header-args: :tangle ~/org/.github/workflows/publish.yaml :comments link :mkdirp yes :padline no :noweb tangle :cache yes :tangle no
:END:
*** Triggers
Step one, we declare the workflow, and when it can be triggered.

In this case, the workflow triggers on changes to the =master= branch:
#+begin_src yaml
name: GitHub Actions Production Deployment

on:
  push:
    branches:
      - master
      #+end_src

And let's add the =workflow_dispatch= trigger so we can kick off the build
manually:
      #+begin_src yaml
  workflow_dispatch:
#+end_src

*** Jobs
Next we declare the jobs, in this case there is only one, =Deploy-Production=, it
run's on the latest version of Ubuntu, and it has a number of steps...
#+begin_src yaml
jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      #+end_src

*** Steps
**** Checkout and Cleanup
We can checkout /this/ repo:
#+begin_src yaml
      - name: Checkout org
        uses: actions/checkout@v2
#+end_src

Now we're going to remove any files that I have marked as private:
#+begin_src yaml
      - name: "Remove files marked :PRIVATE: t"
        run: 'find ./ -type f -exec grep -q "^:PRIVATE: t\$" {} \; -delete'
#+end_src

Lastly, we need to install figlet to make the banner for the site's header.
#+begin_src yaml
      - name: "Instal dependencies"
        run: 'sudo apt-get install -y figlet'
#+end_src

**** Setting the Timezone
I don't think this actually is doing anything, but I'm setting it just in
case...
#+begin_src
      - name: Set Timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Americas/Chicago"
#+end_src

**** Build and Deploy!

Now we install the Vercel CLI, pull in the Vercel project, build it, and push
it. This is all right from the Vercel documents with no changes:
#+begin_src yaml
      - name: Install emacs
        uses: purcell/setup-emacs@master
        with:
          version: 28.2
      - name: Run org-publish
        working-directory: ./build/
        run: sh build.sh
      - name: Deploy to neocities
        uses: bcomnes/deploy-to-neocities@v1
        with:
          api_token: ${{ secrets.NEOCITIES_API_TOKEN }}
          dist_dir: build/_html/
#+end_src
** Build with Sylvan and Publish to Cloudflare Pages via Wrangler
:PROPERTIES:
:header-args: :tangle ~/org/.github/workflows/publish.yaml :comments link :mkdirp yes :padline no :noweb tangle :cache yes
:END:
This action builds the sylvan project and then pushes the build to CF pages via
Wrangler. I'm doing it this way instead of using the CI built into CF Pages
because I merge my org content into my Astrojs project.
*** Triggers
Step one, we declare the workflow, and when it can be triggered.

In this case, the workflow triggers on changes to the =master= branch:
#+begin_src yaml
name: GitHub Actions Production Deployment

on:
  push:
    branches:
      - master
      #+end_src

We also are going to trigger when the upstream NextJS project, [[https://github.com/pard68/sylvan][Sylvan]], is
updated, so we added a =repository_dispatch= trigger:
      #+begin_src yaml
  repository_dispatch:
    types:
      - sylvan-update
      #+end_src

And lastly, let's add the =workflow_dispatch= trigger so we can kick off the build
manually:
      #+begin_src yaml
  workflow_dispatch:
#+end_src

*** Jobs
Next we declare the jobs, in this case there is only one, =Deploy-Production=, it
run's on the latest version of Ubuntu, and it has a number of steps...
#+begin_src yaml
jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      #+end_src

*** Steps
**** Checkout and Cleanup
We actually have to checkout two different repos. First let's checkout the
Sylvan repo to the root of our action:
#+begin_src yaml
      - name: Checkout Sylvan
        uses: actions/checkout@v2
        with:
          repository: ispringle/sylvan
#+end_src

Now we checkout the org repo (which is the repo this action runs it, but you
cannot view it since it's a private repo), and we check it out to the =org/=
directory within the Sylvan project:
#+begin_src yaml
      - name: Checkout Org content
        uses: actions/checkout@v2
        with:
          path: content/
#+end_src

Now we're going to remove any files that I have marked as private. I don't think
this is needed any longer, but it doesn't hurt...
          #+begin_src yaml
      - name: "Remove files marked :PRIVATE: t"
        run: 'find ./content -type f -exec grep -q "^:PRIVATE: t\$" {} \; -delete'
        #+end_src

**** Setting the Timezone
I don't think this actually is doing anything, but I'm setting it just in
case...
#+begin_src
      - name: Set Timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Americas/Chicago"
#+end_src

**** Build and Deploy!
Now we setup and build the project:
#+begin_src yaml
      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Instal deps
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: Build
        uses: borales/actions-yarn@v4
        with:
          cmd: build
#+end_src

Finally we push to CF Pages with the Wrangle action:
#+begin_src yaml
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages publish --project-name=org dist
#+end_src
